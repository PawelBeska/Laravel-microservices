version: '3'
networks:
  default:
    driver: bridge

services:
  webserver:
    image: nginx:alpine
    restart: unless-stopped
    tty: true
    container_name: microservices_webserver
    ports:
      - "8000:80"
      - "81"
      - "82"
      - "83:83"
    volumes:
      - ./apps/gateway/:/var/www/gateway
      - ./apps/auth/:/var/www/auth
      - ./apps/notification/:/var/www/notification
      - ./apps/movie/:/var/www/movie
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/sites/:/etc/nginx/conf.d/
      - ./docker/nginx/ssl/:/etc/ssl/
    extra_hosts: # <-- does no harm
      - "host.docker.internal:host-gateway" # <-- does no harm
  auth:
    container_name: auth_service
    build:
      context: apps/auth
      dockerfile: Dockerfile
    restart: unless-stopped
    tty: true
    working_dir: /var/www/auth
    env_file:
      - .env
    volumes:
      - ./apps/auth/:/var/www/auth
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    extra_hosts: # <--- this is required
      - "host.docker.internal:host-gateway" # <--- this is required
  auth_db:
    image: mariadb:10.4.13
    restart: unless-stopped
    tty: true
    container_name: auth_db
    ports:
      - "13306:3306"
    environment:
      MYSQL_DATABASE: auth_db
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      SERVICE_NAME: mysql
      SERVICE_TAGS: dev
    volumes:
      - ./docker/mysql/auth:/var/lib/mysql
  gateway:
    container_name: gateway_service
    build:
      context: apps/gateway
      dockerfile: Dockerfile
    restart: unless-stopped
    tty: true
    working_dir: /var/www/gateway
    env_file:
      - .env
    volumes:
      - ./apps/gateway/:/var/www/gateway
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    extra_hosts: # <--- this is required
      - "host.docker.internal:host-gateway" # <--- this is required
  gateway_db:
    container_name: gateway_db
    image: mongo:latest
    ports:
      - 27017:27017
    volumes:
      - ./docker/mongo/gateway_db/:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${GATEWAY_MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${GATEWAY_MONGO_PASSWORD}
      - MONGO_INITDB_DATABASE=${GATEWAY_MONGO_DATABASE}
  notification:
    container_name: notification_service
    build:
      context: apps/notification
      dockerfile: Dockerfile
    restart: unless-stopped
    tty: true
    working_dir: /var/www/notification
    env_file:
      - .env
    volumes:
      - ./apps/notification/:/var/www/notification
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    extra_hosts: # <--- this is required
      - "host.docker.internal:host-gateway" # <--- this is required
  notification_db:
    image: mariadb:10.4.13
    restart: unless-stopped
    tty: true
    container_name: notification_db
    ports:
      - "13307:3306"
    environment:
      MYSQL_DATABASE: notification_db
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      SERVICE_NAME: mysql
      SERVICE_TAGS: dev
    volumes:
      - ./docker/mysql/notification:/var/lib/mysql
  movie:
    container_name: movie_service
    build:
      context: apps/movie
      dockerfile: Dockerfile
    restart: unless-stopped
    tty: true
    working_dir: /var/www/movie
    env_file:
      - .env
    volumes:
      - ./apps/movie/:/var/www/movie
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    extra_hosts: # <--- this is required
      - "host.docker.internal:host-gateway" # <--- this is required
  movie_db:
    image: mariadb:10.4.13
    restart: unless-stopped
    tty: true
    container_name: movie_db
    ports:
      - "13308:3306"
    environment:
      MYSQL_DATABASE: movie_db
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      SERVICE_NAME: mysql
      SERVICE_TAGS: dev
    volumes:
      - ./docker/mysql/movie:/var/lib/mysql
  redis:
    image: redis
    container_name: redis
    ports:
      - ${REDIS_PORT}:6379
    volumes:
      - ./docker/redis/data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
    restart: always
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    hostname: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ./docker/rabbitmq/data/:/var/lib/rabbitmq/
      - ./docker/rabbitmq/log/:/var/log/rabbitmq


